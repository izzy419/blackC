<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-09-04T15:24:52 WAT" name="Suite" finished-at="2023-09-04T15:25:57 WAT" duration-ms="64629">
    <groups>
    </groups>
    <test started-at="2023-09-04T15:24:52 WAT" name="Test" finished-at="2023-09-04T15:25:57 WAT" duration-ms="64629">
      <class name="com.qa.tests.LoginTests">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.qa.tests.LoginTests@510f3d34]" started-at="2023-09-04T15:24:52 WAT" name="beforeTest" finished-at="2023-09-04T15:25:27 WAT" duration-ms="34843" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.qa.tests.LoginTests@510f3d34]" started-at="2023-09-04T15:25:27 WAT" name="beforeClass" finished-at="2023-09-04T15:25:27 WAT" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@510f3d34]" started-at="2023-09-04T15:25:27 WAT" name="beforeMethod" finished-at="2023-09-04T15:25:28 WAT" duration-ms="1032" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.invalidEmailOrPhone()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="invalidEmailOrPhone()[pri:0, instance:com.qa.tests.LoginTests@510f3d34]" started-at="2023-09-04T15:25:28 WAT" name="invalidEmailOrPhone" finished-at="2023-09-04T15:25:40 WAT" duration-ms="11393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidEmailOrPhone -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.tests.LoginTests@510f3d34]" started-at="2023-09-04T15:25:40 WAT" name="afterMethod" finished-at="2023-09-04T15:25:40 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@510f3d34]" started-at="2023-09-04T15:25:40 WAT" name="beforeMethod" finished-at="2023-09-04T15:25:40 WAT" duration-ms="205" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.invalidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="invalidPassword()[pri:0, instance:com.qa.tests.LoginTests@510f3d34]" started-at="2023-09-04T15:25:40 WAT" name="invalidPassword" finished-at="2023-09-04T15:25:46 WAT" duration-ms="6512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidPassword -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.tests.LoginTests@510f3d34]" started-at="2023-09-04T15:25:46 WAT" name="afterMethod" finished-at="2023-09-04T15:25:46 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@510f3d34]" started-at="2023-09-04T15:25:46 WAT" name="beforeMethod" finished-at="2023-09-04T15:25:47 WAT" duration-ms="114" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.successfulLogin() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="successfulLogin()[pri:0, instance:com.qa.tests.LoginTests@510f3d34]" started-at="2023-09-04T15:25:47 WAT" name="successfulLogin" finished-at="2023-09-04T15:25:56 WAT" duration-ms="9650" status="FAIL">
          <exception class="java.lang.IllegalMonitorStateException">
            <message>
              <![CDATA[current thread is not owner]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalMonitorStateException: current thread is not owner
at java.base/java.lang.Object.wait(Native Method)
at com.qa.tests.LoginTests.successfulLogin(LoginTests.java:119)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalMonitorStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.tests.LoginTests@510f3d34]" started-at="2023-09-04T15:25:56 WAT" name="afterMethod" finished-at="2023-09-04T15:25:56 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.qa.tests.LoginTests@510f3d34]" started-at="2023-09-04T15:25:56 WAT" name="afterClass" finished-at="2023-09-04T15:25:56 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.qa.tests.LoginTests@510f3d34]" started-at="2023-09-04T15:25:56 WAT" name="afterTest" finished-at="2023-09-04T15:25:57 WAT" duration-ms="841" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.qa.tests.LoginTests -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
